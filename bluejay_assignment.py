# -*- coding: utf-8 -*-
"""bluejaydelivery_assign.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VPRMUXbZpf-DoVNiJwPOJPxK9ZO2V8oP
"""

import pandas as pd
df = pd.read_excel(r"/content/Assignment_Timecard.xlsx")
print(df)

import pandas as pd
df.info()
df.columns

df.rename(columns={"Date_":"Date"}, inplace=True)

df = globals()["df"]

df = pd.DataFrame()

df.info()

df.fillna("N/A", inplace=True)  # replacing the n/a values

# Function to track consecutive days worked
import pandas as pd
df = pd.read_excel(r"/content/Assignment_Timecard.xlsx")

df["Pay Cycle Start Date"].dtype
df["Time"] = pd.to_datetime(df["Time"])
df["Time Out"] = pd.to_datetime(df["Time Out"])



def track_consecutive_days(employee_data):
    consecutive_days = 0
    last_date = None
    for index, row in employee_data.iterrows():
        date = row["Pay Cycle Start Date"]
        if last_date and date == pd.to_datetime(last_date) + pd.Timedelta(days=1):
            consecutive_days += 1
            if consecutive_days == 7:
                yield row["Employee Name"], row["Position ID"], index
        else:
            consecutive_days = 1
        last_date = date

# Function to identify shifts with short spacing
def identify_short_spacing(employee_data):
    for index in range(len(employee_data) - 1):
        row1 = employee_data.iloc[index]
        row2 = employee_data.iloc[index + 1]
        if (row1["Employee Name"] == row2["Employee Name"]) and (
            row2["Time"] - row1["Time Out"] < pd.Timedelta(hours=10)
            and row2["Time"] - row1["Time Out"] > pd.Timedelta(hours=1)
        ):
            yield row1["Employee Name"], row2["Position ID"], index

# Function to identify shifts exceeding 14 hours
def identify_long_shifts(employee_data):
    for index, row in employee_data.iterrows():
        shift_duration = row["Time Out"] - row["Time"]
        if shift_duration > pd.Timedelta(hours=14):
            yield row["Employee Name"], row["Position ID"], index

# Print results
print("Employees who have worked 7 consecutive days:")
for name, position, index in track_consecutive_days(df.copy()):
    print(f"- {name} ({position})")

print("\nEmployees with less than 10 hours between shifts:")
for name, position, index in identify_short_spacing(df.copy()):
    print(f"- {name} ({position})")

print("\nEmployees who have worked more than 14 hours in a single shift:")
for name, position, index in identify_long_shifts(df.copy()):
    print(f"- {name} ({position})")